@page "/register"
@inject IJSRuntime IJS
@inject NavigationManager NavMgr
@inject IToastService toastService
@inject UserProfileService service
@using FileGue.Tools
@layout NoAuthLayout
<div class="row justify-content-center align-items-center height-self-center">
    <div class="col-md-5 col-sm-12 col-12 align-self-center">
        <div class="sign-user_card">
            <img src="/assets/images/logo.png" class="img-fluid rounded-normal light-logo logo" alt="logo">
            <img src="/assets/images/logo-white.png" class="img-fluid rounded-normal darkmode-logo logo" alt="logo">
            <h3 class="mb-3">Sign Up</h3>
            <p>Create your  account.</p>
            <form>
                <div class="row">
                    <div class="col-lg-6">
                        <div class="floating-label form-group">
                            <input class="floating-input form-control" @bind="DataUser.FirstName" type="text" placeholder=" ">
                            <label>First Name</label>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="floating-label form-group">
                            <input class="floating-input form-control" @bind="DataUser.LastName" type="text" placeholder=" ">
                            <label>Last Name</label>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="floating-label form-group">
                            <input class="floating-input form-control" @bind="DataUser.Email" type="email" placeholder=" ">
                            <label>Email</label>
                        </div>
                    </div> 
                    <div class="col-lg-12">
                        <div class="floating-label form-group">
                            <input class="floating-input form-control" @bind="DataUser.Address" type="text" placeholder=" ">
                            <label>Address</label>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="floating-label form-group">
                            <input class="floating-input form-control" @bind="DataUser.Password" type="password" placeholder=" ">
                            <label>Password</label>
                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="floating-label form-group">
                            <input class="floating-input form-control" @bind="RetypePass" type="password" placeholder=" ">
                            <label>Confirm Password</label>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="floating-label form-group">
                            <img src="@CaptchaImage" style="text-align:center;margin-bottom:5px;mr-1;mb-1">
                            <button @onclick="GenerateCaptcha" class="btn btn-success mb-1">Change</button>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="floating-label form-group">
                            <input class="floating-input form-control" @bind="TypedCaptcha" type="text" placeholder=" ">
                            <label>Captcha</label>
                        </div>
                    </div>
                    <div class="col-lg-12">
                        <div class="custom-control custom-checkbox mb-3 text-left">
                            <input type="checkbox" class="custom-control-input" id="customCheck1">
                            <label class="custom-control-label" for="customCheck1">I agree with the terms of use</label>
                        </div>
                    </div>
                </div>
                <button type="button" class="btn btn-primary" @onclick="DaftarUser">Sign Up</button>
                <p class="mt-3">
                    Already have an Account <a href="/sign-in" class="text-primary">Sign In</a>
                </p>
            </form>
        </div>
    </div>
</div>

@code {
    public string CaptchaImage { get; set; }
    public string Answer { get; set; }
    public string TypedCaptcha { get; set; }

    UserProfile DataUser = new UserProfile();
    string RetypePass;
    string KodePengurus;
    string ErrorMsg = string.Empty;
    bool RegisterSuccess = false;

    void NotAvailable()
    {
        toastService.ShowWarning("Feature is not available yet");
    }



    void GenerateCaptcha()
    {
        Random oRandom = new Random();
        int iNumber = oRandom.Next(1000, 9999);
        Answer = iNumber.ToString();
        var gen = new SkiaCaptchaGenerator();
        var temp =  gen.GenerateImageAsByteArray(Answer);
        string base64String = Convert.ToBase64String(temp, 0, temp.Length);
        CaptchaImage = "data:image/png;base64," + base64String;
    }

    protected override async Task OnInitializedAsync()
    {
        if (string.IsNullOrEmpty(CaptchaImage))
            GenerateCaptcha();
    }
    async Task DaftarUser()
    {
        bool isPengurus = false;
        ErrorMsg = "";

        if (string.IsNullOrEmpty(TypedCaptcha))
        {
            ErrorMsg += "Tolong isi Captcha. ";
        }
        if (Answer != TypedCaptcha)
        {
            ErrorMsg += "Captcha tidak valid. ";
        }
        if (string.IsNullOrEmpty(DataUser.Email))
        {
            ErrorMsg += "Tolong di isi email. ";

        }
        if (!FileGue.Tools.FormValidation.IsValidEmail(DataUser.Email))
        {
            ErrorMsg += "Format email tidak valid. ";

        }
        if (string.IsNullOrEmpty(DataUser.Password))
        {
            ErrorMsg += "Tolong di isi password. ";

        }
        if (string.IsNullOrEmpty(DataUser.Phone))
        {
            ErrorMsg += "Tolong di isi no hp. ";

        }
        if (string.IsNullOrEmpty(DataUser.FirstName))
        {
            ErrorMsg += "Tolong di isi nama depan. ";

        }
        if (string.IsNullOrEmpty(DataUser.LastName))
        {
            ErrorMsg += "Tolong di isi nama belakang. ";

        }
        if (string.IsNullOrEmpty(DataUser.Address))
        {
            ErrorMsg += "Tolong di isi alamat. ";

        }
        if (DataUser.Password != RetypePass)
        {
            ErrorMsg += "Password tidak sesuai dengan ulang password. ";

        }

        DataUser.Username = DataUser.Email;

        if (service.IsUserExists(DataUser.Username))
        {
            ErrorMsg += "User sudah terdaftar sebelumnya, gunakan email lain. ";

        }


        if (ErrorMsg.Length > 0)
        {
            toastService.ShowWarning(ErrorMsg, "Perhatian");
            return;
        }
        var enc = new Encryption();
        DataUser.FullName = $"{DataUser.FirstName} {DataUser.LastName}";


        DataUser.Role = isPengurus ? Roles.Pengurus : Roles.User;
        DataUser.Password = enc.Encrypt(DataUser.Password);
        DataUser.CreatedDate = DateHelper.GetLocalTimeNow();
        if (service.InsertData(DataUser))
        {
            var msg = "Anda telah terdaftar di FileGue, nuhun";
            await SmsService.SendSms(msg, DataUser.Phone);
            await MailService.PostmarkSendEmail("Telah Teregister di FileGue", msg, DataUser.Email);
            RegisterSuccess = true;
            toastService.ShowSuccess("User berhasil di daftarkan.", "Info");
            NavMgr.NavigateTo("/login");

        }
    }
}
